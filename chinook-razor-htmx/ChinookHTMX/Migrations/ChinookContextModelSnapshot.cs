// <auto-generated />
using System;
using ChinookHTMX.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChinookHTMX.Migrations
{
    [DbContext(typeof(ChinookContext))]
    partial class ChinookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ChinookHTMX.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK__Album__3214EC07B9A5C0AD");

                    b.HasIndex(new[] { "ArtistId" }, "IFK_Artist_Album");

                    b.HasIndex(new[] { "Id" }, "IPK_ProductItem");

                    b.ToTable("Album", (string)null);
                    
                    b.HasData(
                        new ChinookHTMX.Entities.Album
                        {
                            Id = 1,
                            Title = "XXXX",
                            ArtistId = 1
                        }
                    );
                });

            modelBuilder.Entity("ChinookHTMX.Entities.AlbumWithArtistName", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("TEXT");

                    b.ToTable((string)null);

                    b.ToView("AlbumWithArtistName", (string)null);
                    
                    b.HasData(
                        new ChinookHTMX.Entities.Artist()
                        {
                            Id = 1,
                            Name = "XXXX"
                        }
                    );
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK__Artist__3214EC0709A11B34");

                    b.HasIndex(new[] { "Id" }, "IPK_Artist");

                    b.ToTable("Artist", (string)null);
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Company")
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Fax")
                        .HasMaxLength(24)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SupportRepId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC07F1CFC9FD");

                    b.HasIndex(new[] { "SupportRepId" }, "IFK_Employee_Customer");

                    b.HasIndex(new[] { "Id" }, "IPK_Customer");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("City")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Fax")
                        .HasMaxLength(24)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReportsTo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC0738B4A554");

                    b.HasIndex(new[] { "ReportsTo" }, "IFK_Employee_ReportsTo");

                    b.HasIndex(new[] { "Id" }, "IPK_Employee");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK__Genre__3214EC075565983F");

                    b.HasIndex(new[] { "Id" }, "IPK_Genre");

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BillingAddress")
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingCity")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingCountry")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingPostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingState")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Invoice__3214EC07D189B35A");

                    b.HasIndex(new[] { "CustomerId" }, "IFK_Customer_Invoice");

                    b.HasIndex(new[] { "Id" }, "IPK_Invoice");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("ChinookHTMX.Entities.InvoiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrackId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__InvoiceL__3214EC071BEC499F");

                    b.HasIndex(new[] { "InvoiceId" }, "IFK_Invoice_InvoiceLine");

                    b.HasIndex(new[] { "TrackId" }, "IFK_ProductItem_InvoiceLine");

                    b.HasIndex(new[] { "Id" }, "IPK_InvoiceLine");

                    b.ToTable("InvoiceLine", (string)null);
                });

            modelBuilder.Entity("ChinookHTMX.Entities.MediaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK__MediaTyp__3214EC07747EF97E");

                    b.HasIndex(new[] { "Id" }, "IPK_MediaType");

                    b.ToTable("MediaType", (string)null);
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK__Playlist__3214EC07F4D99BF1");

                    b.HasIndex(new[] { "Id" }, "IPK_Playlist");

                    b.ToTable("Playlist", (string)null);
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Bytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Composer")
                        .HasMaxLength(220)
                        .HasColumnType("TEXT");

                    b.Property<int?>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MediaTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Milliseconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Track__3214EC07065C803A");

                    b.HasIndex(new[] { "AlbumId" }, "IFK_Album_Track");

                    b.HasIndex(new[] { "GenreId" }, "IFK_Genre_Track");

                    b.HasIndex(new[] { "MediaTypeId" }, "IFK_MediaType_Track");

                    b.HasIndex(new[] { "Id" }, "IPK_Track");

                    b.ToTable("Track", (string)null);
                });

            modelBuilder.Entity("PlaylistTrack", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlaylistId", "TrackId")
                        .HasName("PK__Playlist__A4A6282E7C13F6BC");

                    b.HasIndex(new[] { "PlaylistId" }, "IFK_Playlist_PlaylistTrack");

                    b.HasIndex(new[] { "TrackId" }, "IFK_Track_PlaylistTrack");

                    b.HasIndex(new[] { "PlaylistId" }, "IPK_PlaylistTrack");

                    b.ToTable("PlaylistTrack", (string)null);
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Album", b =>
                {
                    b.HasOne("ChinookHTMX.Entities.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK__Album__ArtistId__4CA06362");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Customer", b =>
                {
                    b.HasOne("ChinookHTMX.Entities.Employee", "SupportRep")
                        .WithMany("Customers")
                        .HasForeignKey("SupportRepId")
                        .HasConstraintName("FK__Customer__Suppor__4D94879B");

                    b.Navigation("SupportRep");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Employee", b =>
                {
                    b.HasOne("ChinookHTMX.Entities.Employee", "ReportsToNavigation")
                        .WithMany("InverseReportsToNavigation")
                        .HasForeignKey("ReportsTo")
                        .HasConstraintName("FK__Employee__Report__4E88ABD4");

                    b.Navigation("ReportsToNavigation");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Invoice", b =>
                {
                    b.HasOne("ChinookHTMX.Entities.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoice__Custome__4F7CD00D");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.InvoiceLine", b =>
                {
                    b.HasOne("ChinookHTMX.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceLi__Invoi__5070F446");

                    b.HasOne("ChinookHTMX.Entities.Track", "Track")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("TrackId")
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceLi__Track__5165187F");

                    b.Navigation("Invoice");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Track", b =>
                {
                    b.HasOne("ChinookHTMX.Entities.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .HasConstraintName("FK__Track__AlbumId__5441852A");

                    b.HasOne("ChinookHTMX.Entities.Genre", "Genre")
                        .WithMany("Tracks")
                        .HasForeignKey("GenreId")
                        .HasConstraintName("FK__Track__GenreId__5535A963");

                    b.HasOne("ChinookHTMX.Entities.MediaType", "MediaType")
                        .WithMany("Tracks")
                        .HasForeignKey("MediaTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Track__MediaType__5629CD9C");

                    b.Navigation("Album");

                    b.Navigation("Genre");

                    b.Navigation("MediaType");
                });

            modelBuilder.Entity("PlaylistTrack", b =>
                {
                    b.HasOne("ChinookHTMX.Entities.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .IsRequired()
                        .HasConstraintName("FK__PlaylistT__Playl__52593CB8");

                    b.HasOne("ChinookHTMX.Entities.Track", null)
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .IsRequired()
                        .HasConstraintName("FK__PlaylistT__Track__534D60F1");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Album", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Employee", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("InverseReportsToNavigation");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Genre", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceLines");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.MediaType", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("ChinookHTMX.Entities.Track", b =>
                {
                    b.Navigation("InvoiceLines");
                });
#pragma warning restore 612, 618
        }
    }
}
